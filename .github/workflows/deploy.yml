name: Build and Deploy React App to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Create Local Build
        run: |
          # Create dist directory for outputs
          mkdir -p dist
          
          # Create prebuild directory 
          mkdir -p prebuild
          
          # Copy all files needed for build
          cp -r src prebuild/
          cp -r public prebuild/
          cp index.html prebuild/
          cp package.json prebuild/
          cp vite.config.js prebuild/
          
          # Debug what's in src directory
          find src -type f | sort
          
          # Create webpack config in prebuild to solve esbuild permission issues
          cd prebuild
          cat > webpack.config.cjs << 'ENDCONFIG'
          const path = require('path');
          const HtmlWebpackPlugin = require('html-webpack-plugin');
          
          module.exports = {
            mode: 'development',
            entry: './src/main.jsx',
            output: {
              path: path.resolve(__dirname, 'dist'),
              filename: 'bundle.js',
              publicPath: '/flexibleDataTable/'
            },
            module: {
              rules: [
                {
                  test: /\.(js|jsx)$/,
                  exclude: /node_modules/,
                  use: {
                    loader: 'babel-loader',
                    options: {
                      presets: ['@babel/preset-env', '@babel/preset-react']
                    }
                  }
                },
                {
                  test: /\.css$/,
                  use: ['style-loader', 'css-loader']
                }
              ]
            },
            resolve: {
              extensions: ['.js', '.jsx']
            },
            plugins: [
              new HtmlWebpackPlugin({
                template: './index.html'
              })
            ],
            devServer: {
              static: {
                directory: path.join(__dirname, 'public')
              },
              port: 3000
            }
          };
          ENDCONFIG
          
          # Replace package.json to use webpack instead of vite
          cat > package.json << 'ENDPACKAGE'
          {
            "name": "flexible-data-table",
            "private": true,
            "version": "0.1.0",
            "type": "commonjs",
            "homepage": "https://flipengineering.github.io/flexibleDataTable",
            "scripts": {
              "build": "webpack --config webpack.config.cjs"
            },
            "dependencies": {
              "react": "^18.2.0",
              "react-dom": "^18.2.0",
              "antd": "^5.9.0"
            },
            "devDependencies": {
              "webpack": "^5.88.0",
              "webpack-cli": "^5.1.4",
              "webpack-dev-server": "^4.15.1", 
              "html-webpack-plugin": "^5.5.3",
              "babel-loader": "^9.1.3",
              "@babel/core": "^7.22.9",
              "@babel/preset-env": "^7.22.9",
              "@babel/preset-react": "^7.22.5",
              "css-loader": "^6.8.1",
              "style-loader": "^3.3.3"
            }
          }
          ENDPACKAGE
          
          # Install only webpack dependencies (not esbuild)
          npm install --no-package-lock webpack webpack-cli webpack-dev-server html-webpack-plugin babel-loader @babel/core @babel/preset-env @babel/preset-react css-loader style-loader react react-dom antd
          
          # Build with webpack
          npx webpack --config webpack.config.cjs
          
          # Create .nojekyll file
          touch dist/.nojekyll
          
          # Move the built files up
          cp -r dist/* ../dist/
          cd ..
          
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true